name: CI Pipeline

on:
  push:
    branches: [ milestone4 ]
  pull_request:
    branches: [ milestone4 ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        container: [ "api-service", "fine-tuning"]
        python-version: [ "3.11"]

    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # Step 3: Install CUDA Libraries
      - name: Install CUDA Libraries
        if: ${{ matrix.container == 'fine-tuning' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub
          sudo add-apt-repository "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/ /"
          sudo apt-get update
          sudo apt-get install -y cuda libcudnn8 libcudnn8-dev
          echo "/usr/local/cuda/lib64" | sudo tee -a /etc/ld.so.conf.d/cuda.conf
          sudo ldconfig

      # Step 4: Set CUDA Environment Path
      - name: Set CUDA Environment Path
        run: |
          export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH

      # Step 5: Install Dependencies
      - name: Install Dependencies for ${{ matrix.container }}
        working-directory: src/${{ matrix.container }}
        run: |
          pip install pipenv
          pipenv install --dev
          pipenv install --extra-index-url https://download.pytorch.org/whl/cu124 "torch==2.5.1+cu124"

      # Step 6: Run Tests
      - name: Run Tests for ${{ matrix.container }}
        working-directory: src/${{ matrix.container }}
        run: |
          pipenv run pytest tests/ --cov=. --cov-report=xml --cov-config=.coveragerc

      # Step 7: Upload Coverage Report
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: src/${{ matrix.container }}/coverage.xml
